name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
        
      - name: Install dependencies
        run: npm install
        
      - name: Build the application
        run: npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-artifacts
          path: ./dist

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
        
      - name: Install dependencies
        run: npm install
        
      - name: Run unit tests
        run: npm test

      - name: Run code quality checks
        run: npm run lint
        
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./test-results

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Deploy to staging environment
        run: |
          echo "deployed"
          
          ./deploy.sh staging

  notify:
    runs-on: ubuntu-latest
    needs: [build, test, deploy]
    if: failure()
    steps:
      - name: Notify Slack on pipeline failure
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-token: ${{ secrets.SLACK_BOT_TOKEN }}
          text: "CI/CD Pipeline failed. Please check the logs for more details."
            
